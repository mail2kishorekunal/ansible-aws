- name: Create VPC
  ec2_vpc_net:
    name: "{{ vpc_name }}"
    cidr_block: "{{ vpc_cidr }}"
    region: "{{ region  }}"
    state: present
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
  register: vpc   

- name: Set VPC ID in variable
  set_fact:
    vpc_id: "{{ vpc.vpc.id }}"

- name: assocciate subnet to the vpc
  ec2_vpc_subnet:
   state: present
   vpc_id: "{{ vpc_id }}"
   region: "{{ region }}"
   cidr: "{{ subnet_cidr }}"
   aws_access_key: "{{ aws_access_key }}"
   aws_secret_key: "{{ aws_secret_key }}"
   map_public: yes
   # resource_tag:
   # Name: "{{ subnet_name }}"
  register: subnet

- name: Create IGW
  ec2_vpc_igw:
   vpc_id: "{{ vpc_id }}"
   region: "{{ region }}"
   aws_access_key: "{{ aws_access_key }}"
   aws_secret_key: "{{ aws_secret_key }}"
   state: "present"
   tags:
    Name: "{{ igw_name }}"
  register: igw

- name: Route IGW  
  ec2_vpc_route_table:
   vpc_id: "{{ vpc_id }}"
   region: "{{ region }}"
   aws_access_key: "{{ aws_access_key }}"
   aws_secret_key: "{{ aws_secret_key }}"
   subnets:
     - "{{ subnet.subnet.id }}"
   routes:
     - dest: 0.0.0.0/0
       gateway_id: "{{ igw.gateway_id }}"
   tags:
       Name: "{{ route_name }}"

- name: Create Security Group
  ec2_group:
   name: web
   description: Security Group
   vpc_id: "{{ vpc_id }}"
   region: "{{ region }}"
   aws_access_key: "{{ aws_access_key }}"
   aws_secret_key: "{{ aws_secret_key }}"
   rules:
     - proto: tcp
       ports:
       - 80
       cidr_ip: 0.0.0.0/0
     - proto: tcp
       ports:
       - 22
       cidr_ip: 0.0.0.0/0
  register: security_group

- name: Create a new ec2 key pair, returns generated private key
  ec2_key:
   region: "{{ region }}"
   aws_access_key: "{{ aws_access_key }}"
   aws_secret_key: "{{ aws_secret_key }}"
   name: "{{ key_pair }}"
  register: keypair
  tags:
   - production-key

- name: Copy EC2 Key Pair Private key locally
  copy: content="{{ keypair.key.private_key }}" dest={{ ec2_key_directory }}production.pem
  when: keypair.changed == true
  tags:
   - production-key

- name: Create EC2 Instance
  ec2:
    image: ami-0c0d01aec729d094d
    wait: yes
    instance_type: t2.micro
    region: "{{ region }}"
    group_id: "{{ security_group.group_id }}"
    vpc_subnet_id: "{{ subnet.subnet.id }}"
    key_name: "{{ keypair.key.name  }}"
    instance_tags:
            Name: Production
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    count: 10
